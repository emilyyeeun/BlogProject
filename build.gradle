buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "io.franzbecker.gradle-lombok" version "3.0.0"
}

group = 'me.yeeunhong'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // 스프링 데이터 JPA
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // 타임리프
    implementation 'org.springframework.boot:spring-boot-starter-validation' // validation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' // swagger
    implementation("com.querydsl:querydsl-core:${queryDslVersion}")
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")
    runtimeOnly 'com.h2database:h2' // 인메모리 데이터베이스
    compileOnly 'org.projectlombok:lombok' // 롬복
    annotationProcessor (
            'org.projectlombok:lombok',
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
            "jakarta.persistence:jakarta.persistence-api:3.1.0"
    )
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

/*
 * queryDSL 설정 추가
 */
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    library = "com.querydsl:querydsl-apt"
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

test {
    useJUnitPlatform()
}